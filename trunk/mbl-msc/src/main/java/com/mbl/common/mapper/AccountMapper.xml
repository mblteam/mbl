<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mbl.common.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.mbl.common.bean.Account" >
    <id column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="account_code" property="accountCode" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="creation_by" property="creationBy" jdbcType="VARCHAR" />
    <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP" />
    <result column="last_update_by" property="lastUpdateBy" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="VARCHAR" />
    <result column="disabled_date" property="disabledDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    account_id, account_code, pwd, creation_date, creation_by, last_update_date, last_update_by, 
    account_type, user_id, status, shop_id, disabled_date
  </sql>
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from m_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </select>
  <delete id="delById" parameterType="java.lang.String" >
    delete from m_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteAccountByUserId" parameterType="java.lang.String" >
    delete from m_account
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="save" parameterType="com.mbl.common.bean.Account" >
    insert into m_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="accountCode != null" >
        account_code,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="creationBy != null" >
        creation_by,
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date,
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="disabledDate != null" >
        disabled_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null" >
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creationBy != null" >
        #{creationBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="disabledDate != null" >
        #{disabledDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.mbl.common.bean.Account" >
    update m_account
    <set >
      <if test="accountCode != null" >
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creationBy != null" >
        creation_by = #{creationBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="disabledDate != null" >
        disabled_date = #{disabledDate,jdbcType=DATE},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>
  <!-- 根据条件查询账户  -->
	<select id="findAllListByParams" resultType="com.mbl.common.vo.AccountVO">
		SELECT a.account_id accountId, a.account_code accountCode, a.pwd pwd, 
    		a.account_type accountType, a.user_id userId, a.status status,a.creation_date,
    		a.shop_id shopId, a.disabled_date disabledDate, u.user_name userName,s.shop_code shopCode
		FROM m_account a left join m_user u on a.user_id = u.user_id left join m_shop s on a.shop_id =s.shop_id  
		where 1=1
		<if test="accountCode != null" >
        	and a.account_code like '%${accountCode}%'
	    </if>
		<if test="accountType != null" >
        	and a.account_type = #{accountType,jdbcType=VARCHAR}
	    </if>
		<if test="status != null" >
        	and a.status = #{status,jdbcType=VARCHAR}
	    </if>
	    <if test="password != null" >
	        and a.pwd = #{password,jdbcType=VARCHAR}
	    </if>
	    <if test="accountId != null" >
	        and a.account_id = #{accountId,jdbcType=VARCHAR}
	    </if>
	    <if test="userId != null" >
	        and a.user_id = #{userId,jdbcType=VARCHAR}
	    </if>
		 order by a.creation_date desc
	</select>
	
  <select id="getCountByParams" resultType="long" parameterType="map" >
    select 
    	count(*)
    from m_account
    where 1=1 
    <if test="accountCode != null" >
        and account_code like '%${accountCode}%'
    </if>
    <if test="authAccountCode != null" >
        and account_code like '%${authAccountCode}%'
    </if>
    <if test="accountType != null" >
    	and account_type = #{accountType,jdbcType=VARCHAR}
    </if>
	<if test="status != null" >
    	and status = #{status,jdbcType=VARCHAR}
    </if>
    <if test="password != null" >
        and pwd = #{password,jdbcType=VARCHAR}
    </if>
    <if test="accountId != null" >
        and account_id = #{accountId,jdbcType=VARCHAR}
    </if>
 	<if test="userId != null" >
		and a.user_id = #{userId,jdbcType=VARCHAR}
	</if>
  </select>
  
  <select id="findAccountByParams" resultType="com.mbl.common.vo.AccountVO" parameterType="map" >
    SELECT
		ma.account_id 	    accountId ,
		ma.account_code 	accountCode ,
		ma.pwd 	pwd ,
		ma.creation_date 	creationDate ,
		ma.creation_by 	creationBy ,
		ma.last_update_date 	lastUpdateDate ,
		ma.last_update_by 	lastUpdateBy ,
		ma.account_type 	accountType ,
		ma.user_id 	userId ,
		ma.status 	status ,
		ma.shop_id 	shopId ,
		ma.disabled_date	disabledDate,
		mu.user_name 	userName ,
		mu.tel 	tel ,
		mu.address 	address ,
		mu.sex 	sex ,
		mu.point	point,
		mu.user_status 	user_status ,
		mu.tel2	tel2
	FROM
		m_account ma
	left JOIN m_user mu on ma.user_id = mu.user_id
    where 
    	  ma.account_code = #{accountCode,jdbcType=VARCHAR}
    	  and ma.pwd = #{password,jdbcType=VARCHAR}
   </select>
   
   <select id="findAccountByCode" resultType="com.mbl.common.vo.AccountVO" parameterType="map" >
    SELECT
		ma.account_id 	    accountId ,
		ma.account_code 	accountCode ,
		ma.pwd 	pwd ,
		ma.creation_date 	creationDate ,
		ma.creation_by 	creationBy ,
		ma.last_update_date 	lastUpdateDate ,
		ma.last_update_by 	lastUpdateBy ,
		ma.account_type 	accountType ,
		ma.user_id 	userId ,
		ma.status 	status ,
		ma.shop_id 	shopId ,
		ma.disabled_date	disabledDate
	FROM m_account ma
    where ma.account_code = #{accountCode,jdbcType=VARCHAR}
   </select>
   <select id="findByOldPsw" resultType="long" parameterType="map" >
	   	select 
	    	count(*)
	    from m_account
	    where 1=1
	    and account_id = #{accountId,jdbcType=VARCHAR}
	    and pwd =#{oldAccountPsw,jdbcType=VARCHAR} 
   </select>
</mapper>